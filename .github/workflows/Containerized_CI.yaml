name: Pull Request Automated Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]
    container:
      image: codyswanner/memecataloger-nextjs:backend-25.08.0
      credentials:
        username: codyswanner
        password: ${{ secrets.docker_token }}
      options: --user root
      env:
        CICD: True
      ports:
        - 8000:8000
      volumes:
        - ./backend:/home/django-server
    steps:
    - uses: actions/checkout@v4
    - name: Ruff linter
      run: python -m ruff check
    - name: Run backend Tests
      working-directory: 'backend/'
      run: |
        python manage.py test
    - name: Start Backend Server
      uses: JarvusInnovations/background-action@v1
      with:
        working-directory: 'backend/'
        run: |
          echo "Got to the run stanza!"
          python manage.py runserver 0.0.0.0:8000
          echo "Got past the python call!"
        wait-on: http://127.0.0.1:8000/api/image/
        wait-for: 2m
  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        node-version: [22.x]
    container:
      image: codyswanner/memecataloger-nextjs:backend-25.08.0
      credentials:
        username: codyswanner
        password: ${{ secrets.docker_token }}
      options: --user root
    steps:
    - name: Wait for backend
      uses: iFaxity/wait-on-action@v1.2.1
      with:
        resource: http://localhost:8000/api/image/
    - name: ESLint
      working-directory: 'frontend/memecataloger'
      run: npx next lint
    - name: Run Jest Tests
      working-directory: 'frontend/memecataloger'
      run: npm run test:gh-actions
    - name: Build for E2E Tests
      working-directory: 'frontend/memecataloger'
      run: npx next build
    - name: Run Playwright E2E Tests
      working-directory: 'frontend/memecataloger'
      run: npx playwright test
