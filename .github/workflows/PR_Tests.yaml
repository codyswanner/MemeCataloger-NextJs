name: Pull Request Automated Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# env:
#   # CICD: "TRUE"
#   DJANGO_SETTINGS_MODULE: "MemeCataloger.settings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]
        node-version: [22.x]

    steps:
    # - name: ENV CHECK
    #   run: |
    #     echo "Python version: ${{ matrix.python-version }}"
    #     echo "Node.js version: ${{ matrix.node-version }}"
    #     echo $CICD

    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Backend Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./backend/requirements.txt
    - name: Ruff linter
      run: ruff check
    - name: Run backend Tests
      run: |
        python ./backend/manage.py test
    - name: Start Backend Server
      run: python ./backend/manage.py runserver
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - name: Install Frontend Dependencies
      working-directory: 'frontend/memecataloger'
      run: npm ci
    - name: ESLint
      working-directory: 'frontend/memecataloger'
      run: npx next lint
    - name: Run Jest Tests
      working-directory: 'frontend/memecataloger'
      run: npm run test:gh-actions
    - name: Build for E2E Tests
      working-directory: 'frontend/memecataloger'
      run: npx next build
    - name: Run Playwright E2E Tests
      working-directory: 'frontend/memecataloger'
      run: npx playwright test
